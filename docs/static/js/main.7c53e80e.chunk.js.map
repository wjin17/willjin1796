{"version":3,"sources":["static/img/w-logo-shadow.png","site-data/NAVIGATION.js","components/Header/FullHeader.js","components/Header/MobileHeader.js","components/Header/Header.js","site-data/SOCIALS.js","pages/Landing/Landing.js","pages/About/About.js","pages/Resume/Resume.js","pages/Projects/Projects.js","pages/Contact/Contact.js","lib/useHover.js","components/App/TransitionWrapper.js","components/Theme/Theme.js","components/Theme/ThemeContext.js","components/FormControl/ToggleSwitch.js","components/Footer/Footer.js","components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","NAVIGATION","title","link","FullHeader","className","map","activeClassName","to","key","MobileHeader","useState","hamburger","toggleHamburger","isMenuOpen","onClick","withRouter","props","width","setWidth","useLayoutEffect","updateWidth","window","innerWidth","addEventListener","removeEventListener","useWindowWidth","location","pathname","src","logoShadow","alt","SOCIALS","icon","Landing","href","target","rel","id","About","Resume","Projects","Contact","showHover","ref","useRef","hovered","setHovered","enter","leave","useEffect","current","useHover","hoverRef","copyInstructions","document","getElementById","setTimeout","innerText","email","navigator","clipboard","writeText","then","Wrapper","styled","div","TransitionGroup","CSSTransition","timeout","exit","classNames","exact","path","component","backgroundColor","theme","light","dark","textColor","ThemeToggleContext","createContext","toggle","AppThemeProvider","children","mode","isThemeLoaded","themeState","setThemeState","currentMode","localStorage","getItem","useEffectDarkMode","Provider","value","setItem","ToggleSwitch","type","checked","isChecked","onChange","htmlFor","label","withTheme","themeToggle","useContext","isDark","App","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","URL","process","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7c53e80e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/w-logo-shadow.883126d6.png\";","export const NAVIGATION = [\n  { title: \"About\", link: \"/about\" },\n  { title: \"Resume\", link: \"/resume\" },\n  { title: \"Projects\", link: \"/projects\" },\n  { title: \"Contact\", link: \"/contact\" }\n];\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport { NAVIGATION } from \"../../site-data/NAVIGATION\";\n\nconst FullHeader = () => {\n  return (\n    <div className=\"header__navigation full-header\">\n      {NAVIGATION.map(({ title, link }) => {\n        return (\n          <NavLink activeClassName=\"active-nav\" to={link} key={title}>\n            <h2>{title}</h2>\n          </NavLink>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default FullHeader;\n","import React, { useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport { NAVIGATION } from \"../../site-data/NAVIGATION\";\n\nconst MobileHeader = () => {\n  const [hamburger, toggleHamburger] = useState(false);\n  const isMenuOpen = hamburger ? \"open\" : \"\";\n  return (\n    <div className=\"header__navigation mobile-header\">\n      <div\n        className={`hamburger-icon ${isMenuOpen}`}\n        onClick={() => {\n          toggleHamburger(!hamburger);\n        }}\n      >\n        <div className=\"bar1\"></div>\n        <div className=\"bar2\"></div>\n        <div className=\"bar3\"></div>\n      </div>\n      <div\n        className={`mobile-header__links ${isMenuOpen}`}\n        onClick={() => {\n          toggleHamburger(!hamburger);\n        }}\n      >\n        {NAVIGATION.map(({ title, link }) => {\n          return (\n            <NavLink activeClassName=\"active-nav\" to={link} key={title}>\n              <h2>{title}</h2>\n            </NavLink>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default MobileHeader;\n","import React, { useLayoutEffect, useState } from \"react\";\nimport { withRouter, Link } from \"react-router-dom\";\n\nimport FullHeader from \"./FullHeader\";\nimport MobileHeader from \"./MobileHeader\";\n\nimport logoShadow from \"../../static/img/w-logo-shadow.png\";\n\nconst useWindowWidth = () => {\n  const [width, setWidth] = useState(0);\n  useLayoutEffect(() => {\n    function updateWidth() {\n      setWidth(window.innerWidth);\n    }\n    window.addEventListener(\"resize\", updateWidth);\n    updateWidth();\n    return () => window.removeEventListener(\"resize\", updateWidth);\n  }, []);\n  return width;\n};\n\nconst Header = props => {\n  const width = useWindowWidth();\n  if (props.location.pathname === \"/\" || width === 0) return null;\n  return (\n    <div className=\"header\">\n      <div className=\"header__inner\">\n        <div className=\"header__home\">\n          <Link to=\"/\">\n            <img src={logoShadow} alt=\"site-logo\"></img>\n          </Link>\n        </div>\n        {width >= 768 ? <FullHeader /> : <MobileHeader />}\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(Header);\n","export const SOCIALS = [\n  { link: \"https://github.com/wjin17\", icon: \"la la-github-alt\" },\n  { link: \"https://www.linkedin.com/in/willjin1796/\", icon: \"la la-linkedin\" }\n];\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { NAVIGATION } from \"../../site-data/NAVIGATION\";\nimport { SOCIALS } from \"../../site-data/SOCIALS\";\n\nconst Landing = () => {\n  return (\n    <div className=\"landing\">\n      <div className=\"landing__text\">\n        <h1>Willie Jin</h1>\n        <h3>Software and Electrical Engineer</h3>\n        <div className=\"landing__text__link\">\n          {SOCIALS.map(({ link, icon }) => {\n            return (\n              <h1 key={link}>\n                <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">\n                  <i className={icon}></i>\n                </a>\n              </h1>\n            );\n          })}\n        </div>\n      </div>\n      <div className=\"landing__nav\">\n        <ul id=\"grid\" className=\"clear\">\n          {NAVIGATION.map(({ title, link }) => {\n            return (\n              <li key={title}>\n                <Link to={link}>\n                  <div className=\"hexagon\">\n                    <div className=\"overlay\">\n                      <h3>{title}</h3>\n                    </div>\n                  </div>\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Landing;\n","import React from \"react\";\n\nconst About = () => {\n  return (\n    <div className=\"about page\">\n      <h1>About</h1>\n      <div className=\"about__content\">\n        <h4>\n          I am a software and electrical engineer currently living in the Bay\n          Area. I received a BS in Electrical Engineering in May of 2019, mainly\n          working with verilog and analog circuits. I started exploring software\n          development in my senior year and primarily focus on web development.\n        </h4>\n        <h4>\n          Outside of engineering, I enjoy skateboarding, weight lifting,\n          gardening, 3D printing, reading, listening to podcasts, and making\n          kombucha.\n        </h4>\n      </div>\n    </div>\n  );\n};\n\nexport default About;\n","import React from \"react\";\n\nconst Resume = () => {\n  return (\n    <div className=\"resume page\">\n      <h1>Resume</h1>\n    </div>\n  );\n};\n\nexport default Resume;\n","import React from \"react\";\n\nconst Projects = () => {\n  return (\n    <div className=\"projects page\">\n      <h1>Projects</h1>\n    </div>\n  );\n};\n\nexport default Projects;\n","import React from \"react\";\nimport useHover from \"../../lib/useHover\";\n\nconst Contact = () => {\n  let showHover;\n\n  const [hoverRef, isHovered] = useHover();\n\n  const updateClipboard = () => {\n    const email = document.getElementById(\"email\").innerText;\n    navigator.clipboard.writeText(email).then(\n      function() {\n        document.getElementById(\"copy-instructions\").innerText = \"Copied!\";\n      },\n      function() {\n        /* clipboard write failed */\n      }\n    );\n  };\n\n  if (isHovered) {\n    showHover = \"show\";\n  } else {\n    showHover = \"\";\n    const copyInstructions = document.getElementById(\"copy-instructions\");\n    setTimeout(() => {\n      if (copyInstructions) copyInstructions.innerText = \"Click to Copy\";\n    }, 100);\n  }\n\n  return (\n    <div className=\"contact page\">\n      <h1>Contact</h1>\n      <div className=\"contact__content\">\n        <h2>Email:</h2>\n        <h4\n          id=\"email\"\n          className=\"contact-email\"\n          onClick={updateClipboard}\n          ref={hoverRef}\n        >\n          willjin1796{\"\\u0040\"}gmail{\"\\u002e\"}com\n        </h4>\n        <p id=\"copy-instructions\" className={`hover-instructions ${showHover}`}>\n          Click to Copy\n        </p>\n        <h2>LinkedIn:</h2>\n        <a\n          href=\"https://www.linkedin.com/in/willjin1796/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <h4>linkedin.com/in/willjin1796/</h4>\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default Contact;\n","import { useState, useEffect, useRef } from \"react\";\n\nexport default function useHover() {\n  const ref = useRef();\n  const [hovered, setHovered] = useState(false);\n\n  const enter = () => setHovered(true);\n  const leave = () => setHovered(false);\n\n  useEffect(() => {\n    ref.current.addEventListener(\"mouseenter\", enter);\n    ref.current.addEventListener(\"mouseleave\", leave);\n    return () => {\n      ref.current.removeEventListener(\"mouseenter\", enter);\n      ref.current.removeEventListener(\"mouseleave\", leave);\n    };\n  }, [ref]);\n\n  return [ref, hovered];\n}\n","import React from \"react\";\nimport { Switch, Route, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nimport Landing from \"../../pages/Landing/Landing\";\nimport About from \"../../pages/About/About\";\nimport Resume from \"../../pages/Resume/Resume\";\nimport Projects from \"../../pages/Projects/Projects\";\nimport Contact from \"../../pages/Contact/Contact\";\n\nconst Wrapper = styled.div`\n  .fade-enter {\n    opacity: 0.01;\n  }\n\n  .fade-enter.fade-enter-active {\n    opacity: 1;\n    transition: opacity 300ms ease-in;\n  }\n\n  .fade-exit {\n    opacity: 1;\n  }\n\n  .fade-exit.fade-exit-active {\n    opacity: 0.01;\n    transition: opacity 300ms ease-in;\n  }\n\n  div.transition-group {\n    position: relative;\n  }\n\n  section.route-section {\n    position: absolute;\n    width: 100%;\n    top: 0;\n    left: 0;\n  }\n`;\n\nconst TransitionWrapper = ({ location }) => {\n  return (\n    <Wrapper>\n      <TransitionGroup>\n        <CSSTransition\n          key={location.pathname}\n          timeout={{ enter: 400, exit: 400 }}\n          classNames={\"fade\"}\n        >\n          <Switch location={location}>\n            <Route exact path=\"/\" component={Landing} />\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/resume\" component={Resume} />\n            <Route path=\"/projects\" component={Projects} />\n            <Route path=\"/contact\" component={Contact} />\n          </Switch>\n        </CSSTransition>\n      </TransitionGroup>\n    </Wrapper>\n  );\n};\n\nexport default withRouter(TransitionWrapper);\n","import theme from \"styled-theming\";\n\nexport const backgroundColor = theme(\"mode\", {\n  light: \"#EEEEEE\",\n  dark: \"#212121\"\n});\nexport const textColor = theme(\"mode\", {\n  light: \"#212121\",\n  dark: \"#EEEEEE\"\n});\n\nexport const buttonBackgroundColor = theme(\"mode\", {\n  light: \"#222\",\n  dark: \"#eee\"\n});\nexport const buttonTextColor = theme(\"mode\", {\n  light: \"white\",\n  dark: \"black\"\n});\n","import React, { useState, useContext, useEffect, createContext } from \"react\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport { backgroundColor, textColor } from \"./Theme\";\n\n// define our toggle context, with a default empty toggle function\nconst ThemeToggleContext = createContext({\n  toggle: () => {}\n});\n// define exportable useContext hook object\nexport const useTheme = () => useContext(ThemeToggleContext);\n\nconst useEffectDarkMode = () => {\n  const [themeState, setThemeState] = useState({\n    mode: \"dark\",\n    isThemeLoaded: false\n  });\n\n  useEffect(() => {\n    const currentMode = localStorage.getItem(\"dark\") || \"dark\";\n    setThemeState({ mode: currentMode, isThemeLoaded: true });\n  }, []);\n  return [themeState, setThemeState];\n};\n\n// define MyThemeProvider\nexport const AppThemeProvider = ({ children }) => {\n  const [themeState, setThemeState] = useEffectDarkMode();\n\n  const toggle = () => {\n    const mode = themeState.mode === \"light\" ? \"dark\" : \"light\";\n    localStorage.setItem(\"dark\", mode);\n    setThemeState({ ...themeState, mode: mode });\n  };\n\n  const Wrapper = styled.div`\n    background-color: ${backgroundColor};\n    color: ${textColor};\n  `;\n\n  if (!themeState.isThemeLoaded) return <div></div>;\n  // render both contexts, then Wrapper, then children\n  return (\n    <ThemeToggleContext.Provider value={{ toggle: toggle }}>\n      <ThemeProvider\n        theme={{\n          mode: themeState.mode\n        }}\n      >\n        <Wrapper>{children}</Wrapper>\n      </ThemeProvider>\n    </ThemeToggleContext.Provider>\n  );\n};\n","import React from \"react\";\n\nconst ToggleSwitch = props => {\n  return (\n    <div className=\"toggle-switch\">\n      <label className=\"switch\">\n        <input\n          type=\"checkbox\"\n          id=\"toggleSwitch\"\n          checked={props.isChecked}\n          onChange={props.onChange}\n        />\n        <span className=\"slider round\"></span>\n      </label>\n      <label htmlFor=\"toggleSwitch\">{props.label}</label>\n    </div>\n  );\n};\n\nexport default ToggleSwitch;\n","import React from \"react\";\nimport { useTheme } from \"../Theme/ThemeContext\";\nimport { withTheme } from \"styled-components\";\nimport ToggleSwitch from \"../FormControl/ToggleSwitch\";\n\nconst Footer = props => {\n  const themeToggle = useTheme();\n  const isDark = props.theme.mode === \"dark\";\n\n  return (\n    <div className=\"footer\">\n      <ToggleSwitch\n        isChecked={isDark}\n        onChange={() => themeToggle.toggle()}\n        label={isDark ? \"\\u263E\" : \"\\u263C\"}\n      ></ToggleSwitch>\n    </div>\n  );\n};\n\nexport default withTheme(Footer);\n","import React from \"react\";\nimport { HashRouter } from \"react-router-dom\";\n\nimport Header from \"../Header/Header\";\nimport TransitionWrapper from \"./TransitionWrapper\";\nimport Footer from \"../Footer/Footer\";\n\nconst App = () => {\n  return (\n    <HashRouter>\n      <Header />\n      <TransitionWrapper />\n      <Footer />\n    </HashRouter>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./static/scss/main.scss\";\nimport \"./static/scss/0-global/line-awesome/line-awesome.min.css\";\nimport { AppThemeProvider } from \"./components/Theme/ThemeContext\";\n\nconst ThemeWrapper = () => {\n  return (\n    <AppThemeProvider>\n      <App />\n    </AppThemeProvider>\n  );\n};\n\nReactDOM.render(<ThemeWrapper />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}